@charset "UTF-8";
/**
 * CONTENTS
 *
 * SETTINGS
 * Defaults.............Globally-available variables and config.
 * Responsive...........Responsive breakpoint settings.
 * Settings.............Import custom site settings.
 *
 * TOOLS
 * Functions............Reusable functions.
 * Mixins...............Useful mixins.
 * Responsive...........Mixin for declaring styles within media queries.
 *
 * GENERIC
 * Normalize.css........A level playing field.
 * Box-sizing...........Better default `box-sizing`.
 * Reset................Additional resets to normalize.
 * Shared...............Apply shared styles for spacing rhythm.
 *
 * BASE
 * Headings.............H1â€“H6 styles.
 * Paragraphs...........Lead paragraphs.
 * Lists................UL, LI styles.
 * Images...............Fluid images.
 * Page.................High-level page styles.
 *
 * OBJECTS
 * Block................Image stacked on top of content.
 * Box..................Box off content.
 * Buttons..............Simple button object.
 * Flag.................Media object but with vertical alignment.
 * Layout...............Grid system.
 * List-Bare............Simple list with no indent or bullet points.
 * List-Block...........Lists with li as a block element.
 * List-Inline..........Lists with items displayed in one line.
 * List-UI..............Lists with a separator between elements.
 * Media................Image and text side by side.
 * Pack.................Packs children up horizontally to fit parent width.
 * Tables...............Simple table layouts.
 * Tabs.................Equal width nav tabs.
 *
 * COMPONENTS
 * Hero.................Large masthead
 * Footer...............Global footer
 * Bands................Full-width horizontal sections
 * Forms................Form module
 *
 * THEME
 *
 * TESTS
 *
 * TRUMPS
 * Clearfix.............Clears content.
 * Print................Resets for print versions.
 * Spacing..............Margin and padding helper classes.
 * Responsive-Spacing...Responsive margin and padding helper classes.
 * Width................Width helper classes.
 * Responsive-Widths....Responsive width helper classes.
 * Typography...........Typography helper classes.
*/
/**
 * This option is overwritten entirely
 *
 */
/*!
 * inuitcss, by @csswizardry
 *
 * github.com/inuitcss | inuitcss.com
 */
/*------------------------------------*    #ALIASES
\*------------------------------------*/
/*------------------------------------*    #GENERIC
\*------------------------------------*/
/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"], input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/*------------------------------------*    #BOX-SIZING
\*------------------------------------*/
/**
 * Set the global `box-sizing` state to `border-box`.
 *
 * css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice
 * paulirish.com/2012/box-sizing-border-box-ftw
 */
html {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

*,
*:before,
*:after {
  -webkit-box-sizing: inherit;
  -moz-box-sizing: inherit;
  box-sizing: inherit; }

/*------------------------------------*    #RESET
\*------------------------------------*/
/**
 * As well as using normalize.css, it is often advantageous to remove all
 * margins from certain elements.
 */
body,
h1, h2, h3, h4, h5, h6,
p, blockquote, pre,
dl, dd, ol, ul,
form, fieldset, legend,
figure,
table, th, td, caption,
hr {
  margin: 0;
  padding: 0; }

/**
 * Give a help cursor to elements that give extra info on `:hover`.
 */
abbr[title],
dfn[title] {
  cursor: help; }

/**
 * Remove underlines from potentially troublesome elements.
 */
u,
ins {
  text-decoration: none; }

/**
 * Apply faux underlines to inserted text via `border-bottom`.
 */
ins {
  border-bottom: 1px solid; }

/*------------------------------------*    #SHARED
\*------------------------------------*/
/**
 * Where `margin-bottom` is concerned,this value will be the same as the
 * base line-height. This allows us to keep a consistent vertical rhythm.
 * As per: csswizardry.com/2012/06/single-direction-margin-declarations
 */
h1, h2, h3, h4, h5, h6,
ul, ol, dl,
blockquote, p, address,
hr,
table,
fieldset, figure,
pre,
.hero, .form-fields > li {
  margin-bottom: 27px;
  margin-bottom: 1.35rem; }

/**
 * Where `margin-left` is concerned we want to try and indent certain elements
 * by a consistent amount. Define that amount once,here.
 */
ul, ol, dd {
  margin-left: 54px;
  margin-left: 2.7rem; }

/*------------------------------------*    #BASE
\*------------------------------------*/
/*------------------------------------*    #HEADINGS
\*------------------------------------*/
/**
 * Headings 1â€“6.
 */
h1 {
  font-size: 36px;
  font-size: 1.8rem;
  line-height: 1.5; }

h2 {
  font-size: 30px;
  font-size: 1.5rem;
  line-height: 1.8; }

h3 {
  font-size: 24px;
  font-size: 1.2rem;
  line-height: 1.125; }

h4 {
  font-size: 20px;
  font-size: 1rem;
  line-height: 1.35; }

h5 {
  font-size: 16px;
  font-size: 0.8rem;
  line-height: 1.6875; }

h6 {
  font-size: 14px;
  font-size: 0.7rem;
  line-height: 1.92857; }

/*------------------------------------*    #PARAGRAPHS
\*------------------------------------*/
/**
 * The `.lede` class is used to make the introductory text (usually a paragraph)
 * of a document slightly larger: en.wikipedia.org/wiki/Lede_(news)
 */
.lede {
  font-size: 22.5px;
  font-size: 1.125rem;
  line-height: 1.2; }

/*------------------------------------*    #LISTS
\*------------------------------------*/
/**
 * Remove extra vertical spacing when nesting lists.
 */
li > ul,
li > ol {
  margin-bottom: 0; }

/*------------------------------------*    #IMAGES
\*------------------------------------*/
/**
 * 1. Fluid images for responsive purposes.
 * 2. Offset `alt` text from surrounding copy.
 * 3. Setting `vertical-align` removes the whitespace that appears under `img`
 *    elements when they are dropped into a page as-is. Safer alternative to
 *    using `display: block;`.
 */
img {
  max-width: 100%;
  /* [1] */
  font-style: italic;
  /* [2] */
  vertical-align: middle;
  /* [3] */ }

/**
 * 1. Google Maps breaks if `max-width: 100%` acts upon it; use their selector
 *    to remove the effects.
 * 2. If a `width` and/or `height` attribute have been explicitly defined, letâ€™s
 *    not make the image fluid.
 */
.gm-style img, img[width], img[height] {
  /* [2] */
  max-width: none; }

/*------------------------------------*    #PAGE
\*------------------------------------*/
/**
 * High-, page-level styling.
 *
 * 1. Set the default `font-size` and `line-height` for the entire project,
 *    sourced from our default variables. The `font-size` is calculated to exist
 *    in ems, the `line-height` is calculated to exist unitlessly.
 * 2. Force scrollbars to always be visible to prevent awkward â€˜jumpsâ€™ when
 *    navigating between pages that do/do not have enough content to produce
 *    scrollbars naturally.
 * 3. Ensure the page always fills at least the entire height of the viewport.
 * 4. Prevent certain mobile browsers from automatically zooming fonts.
 * 5. Fonts on OSX will look more consistent with other systems that do not
 *    render text using sub-pixel anti-aliasing.
 */
html {
  font-size: 1.25em;
  /* [1] */
  line-height: 1.35;
  /* [1] */
  background-color: #fff;
  color: #000000;
  overflow-y: scroll;
  /* [2] */
  min-height: 100%;
  /* [3] */
  -webkit-text-size-adjust: 100%;
  /* [4] */
  -ms-text-size-adjust: 100%;
  /* [4] */
  -moz-osx-font-smoothing: grayscale;
  /* [5] */
  -webkit-font-smoothing: antialiased;
  /* [5] */ }

/*------------------------------------*    #PAGE
\*------------------------------------*/
html {
  font-family: "Open Sans", sans-serif;
  font-weight: 400; }

/*------------------------------------*    #LISTS
\*------------------------------------*/
.list--spaced > li {
  margin-bottom: 27px; }

/*------------------------------------*    #OBJECTS
\*------------------------------------*/
/*------------------------------------*    #BLOCK
\*------------------------------------*/
/**
 * The block object simply stacks an image on top of some text-like content.
 */
/**
 * Stacked image-with-text object. A simple abstraction to cover a very commonly
 * occurring design pattern.
 */
.block {
  display: block; }

/**
     * 1. Eliminate whitespace around images.
     */
.block__img {
  vertical-align: middle;
  /* [1] */
  margin-bottom: 27px; }

/**
     * Text-content.
     */
.block__body {
  display: block; }

/*------------------------------------*    #BOX
\*------------------------------------*/
/**
 * The box object simply boxes off content.
 */
/**
 * 1. So we can apply the `.box` class to naturally-inline elements.
 */
.box {
  display: block;
  /* [1] */
  padding: 27px; }
  .box > :last-child {
    margin-bottom: 0; }

/*------------------------------------*    #BUTTONS
\*------------------------------------*/
/**
 * A simple button object.
 */
/**
 * 1. Allow us to style box model properties.
 * 2. Line different sized buttons up a little nicer.
 * 3. Make buttons inherit font styles (often necessary when styling `input`s as
 *    buttons).
 * 4. Reset/normalize some styles.
 * 5. Force all button-styled elements to appear clickable.
 * 6. Fixes odd inner spacing in IE7.
 * 7. Subtract the border size from the padding value so that buttons do not
 *    grow larger as we add borders.
 */
.btn {
  display: inline-block;
  /* [1] */
  vertical-align: middle;
  /* [2] */
  font: inherit;
  /* [3] */
  text-align: center;
  /* [4] */
  margin: 0;
  /* [4] */
  cursor: pointer;
  /* [5] */
  overflow: visible;
  /* [6] */
  padding: 13px 27px;
  /* [7] */
  background-color: #b12029;
  border: 1px solid #b12029; }
  .btn,
  .btn:hover,
  .btn:active,
  .btn:focus {
    text-decoration: none;
    /* [4] */
    color: #ffffff; }

/**
 * Fix a Firefox bug whereby `input type="submit"` gains 2px extra padding.
 */
.btn::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
     * Full-width buttons.
     */
.btn--full {
  width: 100%; }

/*------------------------------------*    #LAYOUT
\*------------------------------------*/
/**
 * The inuitcss layout system uses `box-sizing: border-box;` and
 * `display: inline-block;` to create an extremely powerful, flexible
 * alternative to the traditional grid system. Combine the layout items with
 * the widths found in `trumps.widths`.
 */
/**
 * Begin a layout group.
 */
.layout {
  list-style: none;
  margin: 0;
  padding: 0;
  margin-left: -27px; }

/**
     * 1. Cause columns to stack side-by-side.
     * 2. Space columns apart.
     * 3. Align columns to the tops of each other.
     * 4. Full-width unless told to behave otherwise.
     * 5. Required to combine fluid widths and fixed gutters.
     */
.layout__item {
  display: inline-block;
  /* [1] */
  padding-left: 27px;
  /* [2] */
  vertical-align: top;
  /* [3] */
  width: 100%;
  /* [4] */ }

/**
     * Layouts with large gutters.
     */
.layout--large {
  margin-left: -54px; }
  .layout--large > .layout__item {
    padding-left: 54px; }

/**
     * Reversed rendered order of layout items, e.g. items 1, 2, 3, 4 in your
     * markup will display in order 4, 3, 2, 1 on your page.
     */
.layout--rev {
  direction: rtl;
  text-align: left; }
  .layout--rev > .layout__item {
    direction: ltr;
    text-align: left; }

/*------------------------------------*    #LIST-BARE
\*------------------------------------*/
/**
 * The list-bare object simply removes any indents and bullet points from lists.
 */
.list-bare {
  margin: 0;
  padding: 0;
  list-style: none; }

/*------------------------------------*    #LIST-BLOCK
\*------------------------------------*/
/**
 * The list-block object creates blocky list items out of a `ul` or `ol`.
 */
.list-block {
  margin: 0;
  padding: 0;
  list-style: none; }

.list-block__item,
.list-block > li {
  padding: 27px; }

/*------------------------------------*    #LIST-INLINE
\*------------------------------------*/
/**
 * The list-inline object simply displays a list of items in one line.
 */
.list-inline {
  margin: 0;
  padding: 0;
  list-style: none; }
  .list-inline > li {
    display: inline-block; }

/*------------------------------------*    #LIST-UI
\*------------------------------------*/
/**
 * The UI list object creates blocky list items with a keyline separator out of
 * a `ul` or `ol`.
 */
.list-ui,
.list-ui__item,
.list-ui > li {
  border: 0 solid #ccc; }

.list-ui {
  margin: 0;
  padding: 0;
  list-style: none;
  border-top-width: 1px; }

.list-ui__item,
.list-ui > li {
  padding: 27px;
  border-bottom-width: 1px; }

/*------------------------------------*    #MEDIA
\*------------------------------------*/
/**
 * Place any image- and text-like content side-by-side, as per:
 * stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code
 */
.media {
  display: block; }

.media__img {
  float: left;
  margin-right: 27px; }
  .media__img > img {
    display: block; }

.media__body {
  overflow: hidden;
  display: block; }
  .media__body,
  .media__body > :last-child {
    margin-bottom: 0; }

/*------------------------------------*    #PACK
\*------------------------------------*/
/**
 * The pack object simply causes any number of elements pack up horizontally to
 * automatically fill an equal, fluid width of their parent.
 */
/**
 * 1. Fill all available space.
 * 2. Cause children to be automatically equally sized.
 */
.pack {
  width: 100%;
  /* [1] */
  display: table;
  table-layout: fixed;
  /* [2] */ }

/**
     * Cause children to adopt table-like structure.
     */
.pack__item {
  display: table-cell; }

/*------------------------------------*    #TABLES
\*------------------------------------*/
.table {
  width: 100%; }

/*------------------------------------*    #TABS
\*------------------------------------*/
/**
 * A simple abstraction for making equal-width navigation tabs.
 */
/**
 * 1. Reset any residual styles (most likely from lists).
 * 2. Tables for layout!
 * 3. Force all `table-cell` children to have equal widths.
 * 4. Force the object to be the full width of its parent. Combined with [2],
 *    this makes the object behave in a quasi-`display: block;` manner.
 */
.tabs {
  margin: 0;
  /* [1] */
  padding: 0;
  /* [1] */
  list-style: none;
  /* [1] */
  display: table;
  /* [2] */
  table-layout: fixed;
  /* [3] */
  width: 100%;
  /* [4] */
  text-align: center; }

.tabs__item {
  display: table-cell;
  /* [2] */ }

.tabs__link {
  display: block; }

/*------------------------------------*    #WRAPPERS
\*------------------------------------*/
.wrapper {
  max-width: 1180px;
  margin: 0 auto;
  padding-right: 27px;
  padding-left: 27px; }

/*------------------------------------*    $NAV
\*------------------------------------*/
.nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
  overflow: hidden; }
  .nav ul li {
    float: left;
    padding: 0 27px;
    width: auto; }
    .nav ul li:last-child a {
      padding-right: 0; }
    .nav ul li a {
      display: block;
      text-decoration: none;
      color: #dddddd; }
      .nav ul li a:hover,
      .nav ul li a:active,
      .nav ul li a:focus {
        text-decoration: underline; }

/**
 * Nav abstraction as per: csswizardry.com/2011/09/the-nav-abstraction
 * When used on an `ol` or `ul`, this class throws the list into horizontal mode
 * e.g.:
 *
   <ul class=nav>
       <li><a href=#>Home</a></li>
       <li><a href=#>About</a></li>
       <li><a href=#>Portfolio</a></li>
       <li><a href=#>Contact</a></li>
   </ul>
 *
 * Demo: jsfiddle.net/inuitcss/Vnph4
 *
 */
/**
 * `.nav--stacked` extends `.nav` and throws the list into vertical mode, e.g.:
 *
   <ul class="nav  nav--stacked">
       <li><a href=#>Home</a></li>
       <li><a href=#>About</a></li>
       <li><a href=#>Portfolio</a></li>
       <li><a href=#>Contact</a></li>
   </ul>
 *
 */
/**
 * `.nav--banner` extends `.nav` and centres the list, e.g.:
 *
   <ul class="nav  nav--banner">
       <li><a href=#>Home</a></li>
       <li><a href=#>About</a></li>
       <li><a href=#>Portfolio</a></li>
       <li><a href=#>Contact</a></li>
   </ul>
 *
 */
/**
 * Give nav links a big, blocky hit area. Extends `.nav`, e.g.:
 *
   <ul class="nav  nav--block">
       <li><a href=#>Home</a></li>
       <li><a href=#>About</a></li>
       <li><a href=#>Portfolio</a></li>
       <li><a href=#>Contact</a></li>
   </ul>
 *
 */
/**
 * Force a nav to occupy 100% of the available width of its parent. Extends
 * `.nav`, e.g.:
 *
   <ul class="nav  nav--fit">
       <li><a href=#>Home</a></li>
       <li><a href=#>About</a></li>
       <li><a href=#>Portfolio</a></li>
       <li><a href=#>Contact</a></li>
   </ul>
 *
 * Thanks to @pimpl for this idea!
 */
/**
 * Make a list of keywords. Extends `.nav`, e.g.:
 *
   `<ul class="nav  nav--keywords>`
 *
 */
/*------------------------------------*    #FLAG
\*------------------------------------*/
/**
 * The flag object is a design pattern similar to the media object, however it
 * utilises `display: table[-cell];` to give us control over the vertical
 * alignments of the text and image. csswizardry.com/2013/05/the-flag-object
 */
/**
 * 1. Allows us to control vertical alignments
 * 2. Force the object to be the full width of its parent. Combined with [1],
 *    this makes the object behave in a quasi-`display: block;` manner.
 */
.flag {
  display: table;
  /* [1] */
  width: 100%;
  /* [2] */ }

/**
     * Items within a flag object. There should only ever be one of each.
     *
     * 1. Default to aligning content to their middles.
     */
.flag__img,
.flag__body {
  display: table-cell;
  vertical-align: middle;
  /* [1] */ }

/**
     * Flag images have a space between them and the body of the object.
     */
.flag__img {
  padding-right: 27px; }
  .flag__img > img {
    display: block;
    max-width: none; }

/**
     * The container for the main content of the flag object.
     *
     * 1. Forces the `.flag__body` to take up all remaining space.
     */
.flag__body {
  width: 100%;
  /* [1] */ }
  .flag__body,
  .flag__body > :last-child {
    margin-bottom: 0; }

/**
     * Small flags.
     */
.flag--small > .flag__img {
  padding-right: 14px; }

/**
     * Responsive flag objects.
     *
     * There is a very pragmatic, simple implementation of a responsive flag
     * object, which simply places the text-content beneath the image-content.
     *
     * We use a `max-width` media query because:
     *
     * a) it is the least verbose method in terms of amount of code required.
     * b) the flag objectâ€™s default state is image-next-to-text, so its stacked
     *    state is the exception, rather than the rule.
     */
@media screen and (min-width: 45em) and (max-width: 63.9375em) {
  .flag--responsive {
    /**
             * Rework the spacings on regular flag objects.
             */
    /**
                 * Small responsive flags.
                 *
                 * Take a little more heavy-handed approach to reworking
                 * spacings on flags that are also small flags in their regular
                 * state.
                 */ }
    .flag--responsive,
    .flag--responsive > .flag__img,
    .flag--responsive > .flag__body {
      display: block; }
    .flag--responsive > .flag__img {
      padding-right: 0;
      padding-left: 0;
      margin-bottom: 27px; }
      .flag--responsive > .flag__img > img {
        margin: 0 auto; }
    .flag--responsive.flag--small > .flag__img {
      padding-right: 0;
      padding-left: 0;
      margin-bottom: 14px; } }

@media screen and (max-width: 31.25em) {
  .flag--responsive {
    /**
             * Rework the spacings on regular flag objects.
             */
    /**
                 * Small responsive flags.
                 *
                 * Take a little more heavy-handed approach to reworking
                 * spacings on flags that are also small flags in their regular
                 * state.
                 */ }
    .flag--responsive,
    .flag--responsive > .flag__img,
    .flag--responsive > .flag__body {
      display: block; }
    .flag--responsive > .flag__img {
      padding-right: 0;
      padding-left: 0;
      margin-bottom: 27px; }
      .flag--responsive > .flag__img > img {
        margin: 0 auto; }
    .flag--responsive.flag--small > .flag__img {
      padding-right: 0;
      padding-left: 0;
      margin-bottom: 14px; } }

/*------------------------------------*    #COMPONENTS
\*------------------------------------*/
/*------------------------------------*    #HERO
\*------------------------------------*/
/**
 * The siteâ€™s hero can have two different states:
 *
 * 1) Regular hero with no backgrounds or extra treatments; it just
 *    contains the logo and nav.
 * 2) A masthead that has a fluid-height (becoming fixed after a certain point)
 *    which has a large background image, and some supporting text.
 *
 * The regular hero is incredibly simple, but the masthead version has some
 * slightly intermingled dependency with the wrapper that lives inside it.
 */
/**
 * 1. A slightly smaller padding on smaller viewports.
 * 2. Grow to full-sized padding on large enough viewports.
 */
.hero {
  padding-top: 27px;
  /* [1] */
  padding-bottom: 27px;
  /* [1] */ }
  @media screen and (min-width: 45em) {
    .hero {
      border-bottom-style: solid;
      border-bottom-width: 100px;
      border-bottom-color: #006a85; } }
  @media screen and (min-width: 64em) {
    .hero {
      border-bottom-width: 50px; } }

/**
 * Large site headers act more like mastheads. They have a faux-fluid-height
 * which is controlled by the wrapping element inside it.
 *
 * 1. Mastheads will typically have dark backgrounds, so we need to make sure
 *    the contrast is okay. This value is subject to change as the background
 *    image changes.
 * 2. We need to delegate a lot of the mastheadâ€™s layout to its wrapper element
 *    rather than the masthead itself: it is to this wrapper that most things
 *    are positioned.
 * 3. The wrapper needs positioning context for us to lay our nav and masthead
 *    text in.
 * 4. Faux-fluid-height technique: simply create the illusion of fluid height by
 *    creating space via a percentage padding, and then position everything over
 *    the top of that. This percentage gives us a 16:9 ratio.
 * 5. When the viewport is at 758px wide, our 16:9 ratio means that the masthead
 *    is currently rendered at 480px high. Letâ€™sâ€¦
 * 6. â€¦seamlessly snip off the fluid feature at this height, andâ€¦
 * 7. â€¦fix the height at 480px. This means that we should see no jumps in height
 *    as the masthead moves from fluid to fixed. This actual value takes into
 *    account the padding and the top border on the hero itself.
 */
.hero--masthead {
  margin-bottom: 0;
  background-color: #626262;
  color: #ffffff;
  /* [1] */ }
  @media screen and (min-width: 45em) {
    .hero--masthead {
      background-image: url(../hero-medium.jpg);
      -webkit-background-size: cover;
      -moz-background-size: cover;
      background-size: cover; } }
  @media screen and (min-width: 64em) {
    .hero--masthead {
      background-image: url(../hero-large-2.jpg); } }
  .hero--masthead > .wrapper {
    /* [2] */
    position: relative;
    /* [3] */
    padding-top: 56.25%;
    /* [4] */ }
    @media screen and (min-width: 758px) {
      .hero--masthead > .wrapper {
        /* [5] */
        padding-top: 0;
        /* [6] */
        height: 326px;
        /* [7] */ } }

/**
 * Mastheads will have some large text in them. Letâ€™s position that bottom-left for starters.
 * Once the faux-fluid-height feature turns of at 758px we need to position the text
 * relative to the rest of the masthead.
 */
.hero__text {
  margin: 0;
  position: absolute;
  bottom: 0;
  left: auto;
  color: #ffffff;
  font-weight: 300;
  font-size: 50px;
  font-size: 2.5rem;
  line-height: 1.08; }
  @media screen and (min-width: 45em) {
    .hero__text {
      font-size: 66px;
      font-size: 3.3rem;
      line-height: 1.22727; } }
  @media screen and (min-width: 758px) {
    .hero__text {
      position: relative; } }
  @media screen and (min-width: 64em) {
    .hero__text {
      font-size: 84px;
      font-size: 4.2rem;
      line-height: 1.28571; } }

/*------------------------------------*    #PAGE-FOOT
\*------------------------------------*/
.page-foot {
  font-size: 18px;
  font-size: 0.9rem;
  line-height: 1.5;
  font-weight: 600;
  padding-bottom: 0;
  background-color: #626262;
  color: #dddddd;
  padding-bottom: 27px;
  padding-top: 27px; }

/*------------------------------------*    #BANDS
\*------------------------------------*/
.band {
  padding-top: 27px;
  padding-bottom: 27px; }
  @media screen and (min-width: 64em) {
    .band {
      padding-top: 54px;
      padding-bottom: 54px; } }

.band--large {
  padding: 54px; }

.band--highlight {
  background-color: #006a85;
  color: #ffffff; }

.band--gradient {
  background: #ffffff;
  background: radial-gradient(ellipse at top right, #9bc5cf 0%, rgba(155, 197, 207, 0) 50%, rgba(155, 197, 207, 0) 100%); }

/*------------------------------------*    #FORMS
\*------------------------------------*/
.form {
  background-color: #ffffff;
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  border-radius: 10px;
  -webkit-box-shadow: 0px 0px 10px 2px rgba(75, 84, 87, 0.27);
  -moz-box-shadow: 0px 0px 10px 2px rgba(75, 84, 87, 0.27);
  box-shadow: 0px 0px 10px 2px rgba(75, 84, 87, 0.27);
  margin-bottom: 54px; }
  @media screen and (min-width: 45em) {
    .form {
      margin-bottom: 0;
      margin-top: -94px; } }

.form__content {
  padding: 14px; }

.text-input,
textarea {
  font-size: 16px;
  font-size: 0.8rem;
  line-height: 1.6875;
  border: 0 none;
  background-color: #dddddd;
  color: #383434;
  padding: 7px;
  width: 100%;
  margin-bottom: 14px; }
  @media screen and (min-width: 64em) {
    .text-input,
    textarea {
      width: 49%; } }

/**
 * Group sets of form fields in a list, e.g.:
 *
   <ul class=form-fields>
       <li>
           <label />
           <input />
       </li>
       <li>
           <label />
           <select />
       </li>
       <li>
           <label />
           <input />
       </li>
   </ul>
 *
 */
.form-fields {
  list-style: none;
  margin: 0; }

.form-fields > li:last-child {
  margin-bottom: 0; }

/*------------------------------------*    #BUTTONS
\*------------------------------------*/
.btn {
  font-weight: 800;
  text-transform: uppercase;
  background-image: url(../arrow-right.png);
  background-size: 20px 28px;
  background-position: 5% center;
  background-repeat: no-repeat;
  padding-top: 27px;
  padding-bottom: 27px;
  text-indent: 0.5em;
  white-space: normal; }
  @media screen and (min-width: 64em) {
    .btn {
      font-size: 24px;
      font-size: 1.2rem;
      line-height: 1.125; } }

/*------------------------------------*    #PULL-QUOTE
\*------------------------------------*/
.pull-quote {
  /**
     * .4em is roughly equal to the width of the opening â€œ that we wish to hang.
     */
  text-indent: -0.41em;
  padding: 27px;
  border-top: 2px solid #4db7ca;
  border-bottom: 2px solid #4db7ca;
  margin-right: 0;
  margin-left: 0; }
  @media screen and (min-width: 45em) {
    .pull-quote {
      font-size: 28px;
      font-size: 1.4rem;
      line-height: 1.92857;
      padding-left: 108px;
      padding-right: 108px; } }

.pull-quote__source {
  text-indent: 0;
  font-style: normal; }
  .pull-quote__source:before {
    content: "\2014"; }

/**
 * Banner-style quotes, used primarily in the homepage carousel. Unfortunately
 * we need to undo a few things that weâ€™d already set previously.
 */
.pull-quote--banner {
  text-indent: 0;
  border: none;
  margin: 0 auto; }

/**
 * Pull quotes that sit within the context of their surrounding copy.
 */
/*------------------------------------*    #VIDEO
\*------------------------------------*/
.video {
  text-align: center; }
  .video > iframe {
    max-width: 100%;
    /* [1] */
    vertical-align: middle;
    /* [3] */
    margin-bottom: 54px; }

/*------------------------------------*    #CAROUSEL
\*------------------------------------*/
.unslider {
  position: static !important; }

.unslider-wrapper {
  position: relative; }

.unslider__panes {
  margin: 0;
  padding: 0;
  list-style: none;
  position: relative;
  display: table;
  width: 500%;
  overflow: hidden; }

.unslider__pane {
  position: relative;
  display: table-cell;
  vertical-align: middle;
  width: 20%;
  /* 100 / number of panes */
  border-top: 2px solid #626262;
  border-bottom: 2px solid #626262; }

.unslider .dots {
  position: absolute;
  left: 0;
  right: 0;
  bottom: -55px;
  margin: 0 auto; }

.dots-container {
  width: 100%;
  text-align: center; }

.unslider .dots li {
  display: inline-block;
  width: 30px;
  height: 30px;
  margin: 0 4px;
  text-indent: -999em;
  border: 5px solid #ff9f19;
  border-radius: 15px;
  cursor: pointer;
  opacity: .4;
  -webkit-transition: background 0.5s, opacity 0.5s;
  -moz-transition: background 0.5s, opacity 0.5s;
  transition: background 0.5s, opacity 0.5s; }

.unslider .dots li.active {
  background: #ff9f19;
  opacity: 1; }

.unslider-arrow {
  display: none; }
  @media screen and (min-width: 45em) {
    .unslider-arrow {
      display: block;
      text-decoration: none;
      position: absolute;
      min-width: 31px;
      height: 100%;
      cursor: pointer;
      z-index: 10; } }

.unslider-arrow.prev {
  background: url(../arrow-prev.png) no-repeat center center;
  left: 0; }

.unslider-arrow.next {
  background: url(../arrow-next.png) no-repeat center center;
  right: 0; }

/*------------------------------------*    #CUSTOMER STATS
\*------------------------------------*/
.customer-stats {
  text-align: center; }
  .customer-stats li {
    width: 140px;
    vertical-align: top;
    margin: 14px 10px 54px; }

.customer-stats__img {
  min-height: 100px; }

.customer-stats__stat {
  font-size: 24px;
  font-size: 1.2rem;
  line-height: 1.125;
  font-style: italic;
  font-weight: 300; }

.customer-stats__number {
  font-size: 60px;
  font-size: 3rem;
  line-height: 1;
  font-weight: 700;
  display: block;
  font-style: normal; }

.customer-stats__label {
  font-size: 27px;
  font-size: 1.35rem;
  line-height: 1.2;
  font-weight: 700;
  display: block;
  font-style: normal; }

/*------------------------------------*    #THEME
\*------------------------------------*/
/*------------------------------------*    #TESTS
\*------------------------------------*/
/*------------------------------------*    #TRUMPS
\*------------------------------------*/
/*------------------------------------*    #CLEARFIX
\*------------------------------------*/
/**
 * Micro clearfix, as per: css-101.org/articles/clearfix/latest-new-clearfix-so-far.php
 * Extend the clearfix class with Sass to avoid the `.clearfix` class appearing
 * over and over in your markup.
 */
.clearfix:after,
.box:after,
.media:after {
  content: "";
  display: table;
  clear: both; }

/*------------------------------------*    #HEADINGS
\*------------------------------------*/
/**
 * Headings 1â€“6â€™s corresponding Greek-alphabet abstract classes for double-
 * stranded heading hierarchy: csswizardry.com/2012/02/pragmatic-practical-font-sizing-in-css
 *
 * Use these helper classes to cause other elements to adopt the styling of the
 * respective heading, e.g.:
 *
   <h2 class="alpha">Lorem ipsum</h2>
 *
 */
.alpha {
  font-size: 36px;
  font-size: 1.8rem;
  line-height: 1.5; }

.beta {
  font-size: 30px;
  font-size: 1.5rem;
  line-height: 1.8; }

.gamma {
  font-size: 24px;
  font-size: 1.2rem;
  line-height: 1.125; }

.delta {
  font-size: 20px;
  font-size: 1rem;
  line-height: 1.35; }

.epsilon {
  font-size: 16px;
  font-size: 0.8rem;
  line-height: 1.6875; }

.zeta {
  font-size: 14px;
  font-size: 0.7rem;
  line-height: 1.92857; }

/*------------------------------------*    #PRINT
\*------------------------------------*/
/**
 * Very crude, reset-like styles taken from the HTML5 Boilerplate:
 * https://github.com/h5bp/html5-boilerplate/blob/3c3c5e64604209a4d63e1e4c48dd245d45fadfd9/css/main.css#L200-L234
 */
@media print {
  *,
  *:before,
  *:after {
    background: transparent !important;
    color: #000 !important;
    /* Black prints faster: h5bp.com/s */
    box-shadow: none !important;
    text-shadow: none !important; }
  a,
  a:visited {
    text-decoration: underline; }
  a[href]:after {
    content: " (" attr(href) ")"; }
  abbr[title]:after {
    content: " (" attr(title) ")"; }
  /**
     * Donâ€™t show links that are fragment identifiers, or use the `javascript:`
     * pseudo protocol.
     */
  a[href^="#"]:after,
  a[href^="javascript:"]:after {
    content: ""; } }

/*------------------------------------*    #SPACING
\*------------------------------------*/
/**
 * Margin and padding helper classes. Use these to tweak layout on a micro
 * level.
 *
 * `.(m|p)(t|r|b|l|h|v)(-|+|0) {}` = margin/padding top/right/bottom/left/horizontal/vertical less/more/none
 */
/**
     * Margin helper classes.
     *
     * Add margins.
     */
.m {
  margin: 27px !important; }

.mt {
  margin-top: 27px !important; }

.mr {
  margin-right: 27px !important; }

.mb {
  margin-bottom: 27px !important; }

.ml {
  margin-left: 27px !important; }

.mh {
  margin-right: 27px !important;
  margin-left: 27px !important; }

.mv {
  margin-top: 27px !important;
  margin-bottom: 27px !important; }

/**
     * Add tiny margins.
     */
.m-- {
  margin: 7px !important; }

.mt-- {
  margin-top: 7px !important; }

.mr-- {
  margin-right: 7px !important; }

.mb-- {
  margin-bottom: 7px !important; }

.ml-- {
  margin-left: 7px !important; }

.mh-- {
  margin-right: 7px !important;
  margin-left: 7px !important; }

.mv-- {
  margin-top: 7px !important;
  margin-bottom: 7px !important; }

/**
     * Add small margins.
     */
.m- {
  margin: 14px !important; }

.mt- {
  margin-top: 14px !important; }

.mr- {
  margin-right: 14px !important; }

.mb- {
  margin-bottom: 14px !important; }

.ml- {
  margin-left: 14px !important; }

.mh- {
  margin-right: 14px !important;
  margin-left: 14px !important; }

.mv- {
  margin-top: 14px !important;
  margin-bottom: 14px !important; }

/**
     * Add large margins.
     */
.m\+ {
  margin: 54px !important; }

.mt\+ {
  margin-top: 54px !important; }

.mr\+ {
  margin-right: 54px !important; }

.mb\+ {
  margin-bottom: 54px !important; }

.ml\+ {
  margin-left: 54px !important; }

.mh\+ {
  margin-right: 54px !important;
  margin-left: 54px !important; }

.mv\+ {
  margin-top: 54px !important;
  margin-bottom: 54px !important; }

/**
     * Add huge margins.
     */
.m\+\+ {
  margin: 108px !important; }

.mt\+\+ {
  margin-top: 108px !important; }

.mr\+\+ {
  margin-right: 108px !important; }

.mb\+\+ {
  margin-bottom: 108px !important; }

.ml\+\+ {
  margin-left: 108px !important; }

.mh\+\+ {
  margin-right: 108px !important;
  margin-left: 108px !important; }

.mv\+\+ {
  margin-top: 108px !important;
  margin-bottom: 108px !important; }

/**
     * Negative margins.
     */
.-m {
  margin: -27px !important; }

.-mt {
  margin-top: -27px !important; }

.-mr {
  margin-right: -27px !important; }

.-mb {
  margin-bottom: -27px !important; }

.-ml {
  margin-left: -27px !important; }

.-mh {
  margin-right: -27px !important;
  margin-left: -27px !important; }

.-mv {
  margin-top: -27px !important;
  margin-bottom: -27px !important; }

/**
     * Tiny negative margins.
     */
.-m-- {
  margin: -7px !important; }

.-mt-- {
  margin-top: -7px !important; }

.-mr-- {
  margin-right: -7px !important; }

.-mb-- {
  margin-bottom: -7px !important; }

.-ml-- {
  margin-left: -7px !important; }

.-mh-- {
  margin-right: -7px !important;
  margin-left: -7px !important; }

.-mv-- {
  margin-top: -7px !important;
  margin-bottom: -108px !important; }

/**
     * Small negative margins.
     */
.-m- {
  margin: -14px !important; }

.-mt- {
  margin-top: -14px !important; }

.-mr- {
  margin-right: -14px !important; }

.-mb- {
  margin-bottom: -14px !important; }

.-ml- {
  margin-left: -14px !important; }

.-mh- {
  margin-right: -14px !important;
  margin-left: -14px !important; }

.-mv- {
  margin-top: -14px !important;
  margin-bottom: -14px !important; }

/**
     * Large negative margins.
     */
.-m\+ {
  margin: -54px !important; }

.-mt\+ {
  margin-top: -54px !important; }

.-mr\+ {
  margin-right: -54px !important; }

.-mb\+ {
  margin-bottom: -54px !important; }

.-ml\+ {
  margin-left: -54px !important; }

.-mh\+ {
  margin-right: -54px !important;
  margin-left: -54px !important; }

.-mv\+ {
  margin-top: -54px !important;
  margin-bottom: -54px !important; }

/**
     * Huge negative margins.
     */
.-m\+\+ {
  margin: -108px !important; }

.-mt\+\+ {
  margin-top: -108px !important; }

.-mr\+\+ {
  margin-right: -108px !important; }

.-mb\+\+ {
  margin-bottom: -108px !important; }

.-ml\+\+ {
  margin-left: -108px !important; }

.-mh\+\+ {
  margin-right: -108px !important;
  margin-left: -108px !important; }

.-mv\+\+ {
  margin-top: -108px !important;
  margin-bottom: -108px !important; }

/**
     * Padding helper classes.
     *
     * Add paddings.
     */
.p {
  padding: 27px !important; }

.pt {
  padding-top: 27px !important; }

.pr {
  padding-right: 27px !important; }

.pb {
  padding-bottom: 27px !important; }

.pl {
  padding-left: 27px !important; }

.ph {
  padding-right: 27px !important;
  padding-left: 27px !important; }

.pv {
  padding-top: 27px !important;
  padding-bottom: 27px !important; }

/**
     * Add tiny paddings.
     */
.p-- {
  padding: 7px !important; }

.pt-- {
  padding-top: 7px !important; }

.pr-- {
  padding-right: 7px !important; }

.pb-- {
  padding-bottom: 7px !important; }

.pl-- {
  padding-left: 7px !important; }

.ph-- {
  padding-right: 7px !important;
  padding-left: 7px !important; }

.pv-- {
  padding-top: 7px !important;
  padding-bottom: 7px !important; }

/**
     * Add small paddings.
     */
.p- {
  padding: 14px !important; }

.pt- {
  padding-top: 14px !important; }

.pr- {
  padding-right: 14px !important; }

.pb- {
  padding-bottom: 14px !important; }

.pl- {
  padding-left: 14px !important; }

.ph- {
  padding-right: 14px !important;
  padding-left: 14px !important; }

.pv- {
  padding-top: 14px !important;
  padding-bottom: 14px !important; }

/*------------------------------------*    #SPACING-RESPONSIVE
\*------------------------------------*/
/**
 * Margin and padding helper classes. Use these to tweak layout on a micro
 * level.
 *
 * `.(m|p)(t|r|b|l|h|v)(-|+|0) {}` = margin/padding top/right/bottom/left/horizontal/vertical less/more/none
 */
/**
     * Margin helper classes.
     *
     * Add margins.
     */
@media screen and (max-width: 44.9375em) {
  .palm-m {
    margin: 27px !important; }
  .palm-mt {
    margin-top: 27px !important; }
  .palm-mr {
    margin-right: 27px !important; }
  .palm-mb {
    margin-bottom: 27px !important; }
  .palm-ml {
    margin-left: 27px !important; }
  .palm-mh {
    margin-right: 27px !important;
    margin-left: 27px !important; }
  .palm-mv {
    margin-top: 27px !important;
    margin-bottom: 27px !important; } }

@media screen and (max-width: 31.25em) {
  .flag-m {
    margin: 27px !important; }
  .flag-mt {
    margin-top: 27px !important; }
  .flag-mr {
    margin-right: 27px !important; }
  .flag-mb {
    margin-bottom: 27px !important; }
  .flag-ml {
    margin-left: 27px !important; }
  .flag-mh {
    margin-right: 27px !important;
    margin-left: 27px !important; }
  .flag-mv {
    margin-top: 27px !important;
    margin-bottom: 27px !important; } }

@media screen and (min-width: 45em) and (max-width: 63.9375em) {
  .lap-m {
    margin: 27px !important; }
  .lap-mt {
    margin-top: 27px !important; }
  .lap-mr {
    margin-right: 27px !important; }
  .lap-mb {
    margin-bottom: 27px !important; }
  .lap-ml {
    margin-left: 27px !important; }
  .lap-mh {
    margin-right: 27px !important;
    margin-left: 27px !important; }
  .lap-mv {
    margin-top: 27px !important;
    margin-bottom: 27px !important; } }

@media screen and (min-width: 45em) {
  .lap-and-up-m {
    margin: 27px !important; }
  .lap-and-up-mt {
    margin-top: 27px !important; }
  .lap-and-up-mr {
    margin-right: 27px !important; }
  .lap-and-up-mb {
    margin-bottom: 27px !important; }
  .lap-and-up-ml {
    margin-left: 27px !important; }
  .lap-and-up-mh {
    margin-right: 27px !important;
    margin-left: 27px !important; }
  .lap-and-up-mv {
    margin-top: 27px !important;
    margin-bottom: 27px !important; } }

@media screen and (max-width: 63.9375em) {
  .portable-m {
    margin: 27px !important; }
  .portable-mt {
    margin-top: 27px !important; }
  .portable-mr {
    margin-right: 27px !important; }
  .portable-mb {
    margin-bottom: 27px !important; }
  .portable-ml {
    margin-left: 27px !important; }
  .portable-mh {
    margin-right: 27px !important;
    margin-left: 27px !important; }
  .portable-mv {
    margin-top: 27px !important;
    margin-bottom: 27px !important; } }

@media screen and (min-width: 64em) {
  .desk-m {
    margin: 27px !important; }
  .desk-mt {
    margin-top: 27px !important; }
  .desk-mr {
    margin-right: 27px !important; }
  .desk-mb {
    margin-bottom: 27px !important; }
  .desk-ml {
    margin-left: 27px !important; }
  .desk-mh {
    margin-right: 27px !important;
    margin-left: 27px !important; }
  .desk-mv {
    margin-top: 27px !important;
    margin-bottom: 27px !important; } }

/**
     * Add tiny margins.
     */
@media screen and (max-width: 44.9375em) {
  .palm-m-- {
    margin: 7px !important; }
  .palm-mt-- {
    margin-top: 7px !important; }
  .palm-mr-- {
    margin-right: 7px !important; }
  .palm-mb-- {
    margin-bottom: 7px !important; }
  .palm-ml-- {
    margin-left: 7px !important; }
  .palm-mh-- {
    margin-right: 7px !important;
    margin-left: 7px !important; }
  .palm-mv-- {
    margin-top: 7px !important;
    margin-bottom: 7px !important; } }

@media screen and (max-width: 31.25em) {
  .flag-m-- {
    margin: 7px !important; }
  .flag-mt-- {
    margin-top: 7px !important; }
  .flag-mr-- {
    margin-right: 7px !important; }
  .flag-mb-- {
    margin-bottom: 7px !important; }
  .flag-ml-- {
    margin-left: 7px !important; }
  .flag-mh-- {
    margin-right: 7px !important;
    margin-left: 7px !important; }
  .flag-mv-- {
    margin-top: 7px !important;
    margin-bottom: 7px !important; } }

@media screen and (min-width: 45em) and (max-width: 63.9375em) {
  .lap-m-- {
    margin: 7px !important; }
  .lap-mt-- {
    margin-top: 7px !important; }
  .lap-mr-- {
    margin-right: 7px !important; }
  .lap-mb-- {
    margin-bottom: 7px !important; }
  .lap-ml-- {
    margin-left: 7px !important; }
  .lap-mh-- {
    margin-right: 7px !important;
    margin-left: 7px !important; }
  .lap-mv-- {
    margin-top: 7px !important;
    margin-bottom: 7px !important; } }

@media screen and (min-width: 45em) {
  .lap-and-up-m-- {
    margin: 7px !important; }
  .lap-and-up-mt-- {
    margin-top: 7px !important; }
  .lap-and-up-mr-- {
    margin-right: 7px !important; }
  .lap-and-up-mb-- {
    margin-bottom: 7px !important; }
  .lap-and-up-ml-- {
    margin-left: 7px !important; }
  .lap-and-up-mh-- {
    margin-right: 7px !important;
    margin-left: 7px !important; }
  .lap-and-up-mv-- {
    margin-top: 7px !important;
    margin-bottom: 7px !important; } }

@media screen and (max-width: 63.9375em) {
  .portable-m-- {
    margin: 7px !important; }
  .portable-mt-- {
    margin-top: 7px !important; }
  .portable-mr-- {
    margin-right: 7px !important; }
  .portable-mb-- {
    margin-bottom: 7px !important; }
  .portable-ml-- {
    margin-left: 7px !important; }
  .portable-mh-- {
    margin-right: 7px !important;
    margin-left: 7px !important; }
  .portable-mv-- {
    margin-top: 7px !important;
    margin-bottom: 7px !important; } }

@media screen and (min-width: 64em) {
  .desk-m-- {
    margin: 7px !important; }
  .desk-mt-- {
    margin-top: 7px !important; }
  .desk-mr-- {
    margin-right: 7px !important; }
  .desk-mb-- {
    margin-bottom: 7px !important; }
  .desk-ml-- {
    margin-left: 7px !important; }
  .desk-mh-- {
    margin-right: 7px !important;
    margin-left: 7px !important; }
  .desk-mv-- {
    margin-top: 7px !important;
    margin-bottom: 7px !important; } }

/**
     * Add small margins.
     */
@media screen and (max-width: 44.9375em) {
  .palm-m- {
    margin: 14px !important; }
  .palm-mt- {
    margin-top: 14px !important; }
  .palm-mr- {
    margin-right: 14px !important; }
  .palm-mb- {
    margin-bottom: 14px !important; }
  .palm-ml- {
    margin-left: 14px !important; }
  .palm-mh- {
    margin-right: 14px !important;
    margin-left: 14px !important; }
  .palm-mv- {
    margin-top: 14px !important;
    margin-bottom: 14px !important; } }

@media screen and (max-width: 31.25em) {
  .flag-m- {
    margin: 14px !important; }
  .flag-mt- {
    margin-top: 14px !important; }
  .flag-mr- {
    margin-right: 14px !important; }
  .flag-mb- {
    margin-bottom: 14px !important; }
  .flag-ml- {
    margin-left: 14px !important; }
  .flag-mh- {
    margin-right: 14px !important;
    margin-left: 14px !important; }
  .flag-mv- {
    margin-top: 14px !important;
    margin-bottom: 14px !important; } }

@media screen and (min-width: 45em) and (max-width: 63.9375em) {
  .lap-m- {
    margin: 14px !important; }
  .lap-mt- {
    margin-top: 14px !important; }
  .lap-mr- {
    margin-right: 14px !important; }
  .lap-mb- {
    margin-bottom: 14px !important; }
  .lap-ml- {
    margin-left: 14px !important; }
  .lap-mh- {
    margin-right: 14px !important;
    margin-left: 14px !important; }
  .lap-mv- {
    margin-top: 14px !important;
    margin-bottom: 14px !important; } }

@media screen and (min-width: 45em) {
  .lap-and-up-m- {
    margin: 14px !important; }
  .lap-and-up-mt- {
    margin-top: 14px !important; }
  .lap-and-up-mr- {
    margin-right: 14px !important; }
  .lap-and-up-mb- {
    margin-bottom: 14px !important; }
  .lap-and-up-ml- {
    margin-left: 14px !important; }
  .lap-and-up-mh- {
    margin-right: 14px !important;
    margin-left: 14px !important; }
  .lap-and-up-mv- {
    margin-top: 14px !important;
    margin-bottom: 14px !important; } }

@media screen and (max-width: 63.9375em) {
  .portable-m- {
    margin: 14px !important; }
  .portable-mt- {
    margin-top: 14px !important; }
  .portable-mr- {
    margin-right: 14px !important; }
  .portable-mb- {
    margin-bottom: 14px !important; }
  .portable-ml- {
    margin-left: 14px !important; }
  .portable-mh- {
    margin-right: 14px !important;
    margin-left: 14px !important; }
  .portable-mv- {
    margin-top: 14px !important;
    margin-bottom: 14px !important; } }

@media screen and (min-width: 64em) {
  .desk-m- {
    margin: 14px !important; }
  .desk-mt- {
    margin-top: 14px !important; }
  .desk-mr- {
    margin-right: 14px !important; }
  .desk-mb- {
    margin-bottom: 14px !important; }
  .desk-ml- {
    margin-left: 14px !important; }
  .desk-mh- {
    margin-right: 14px !important;
    margin-left: 14px !important; }
  .desk-mv- {
    margin-top: 14px !important;
    margin-bottom: 14px !important; } }

/**
     * Padding helper classes.
     *
     * Add paddings.
     */
@media screen and (max-width: 44.9375em) {
  .palm-p {
    padding: 27px !important; }
  .palm-pt {
    padding-top: 27px !important; }
  .palm-pr {
    padding-right: 27px !important; }
  .palm-pb {
    padding-bottom: 27px !important; }
  .palm-pl {
    padding-left: 27px !important; }
  .palm-ph {
    padding-right: 27px !important;
    padding-left: 27px !important; }
  .palm-pv {
    padding-top: 27px !important;
    padding-bottom: 27px !important; } }

@media screen and (max-width: 31.25em) {
  .flag-p {
    padding: 27px !important; }
  .flag-pt {
    padding-top: 27px !important; }
  .flag-pr {
    padding-right: 27px !important; }
  .flag-pb {
    padding-bottom: 27px !important; }
  .flag-pl {
    padding-left: 27px !important; }
  .flag-ph {
    padding-right: 27px !important;
    padding-left: 27px !important; }
  .flag-pv {
    padding-top: 27px !important;
    padding-bottom: 27px !important; } }

@media screen and (min-width: 45em) and (max-width: 63.9375em) {
  .lap-p {
    padding: 27px !important; }
  .lap-pt {
    padding-top: 27px !important; }
  .lap-pr {
    padding-right: 27px !important; }
  .lap-pb {
    padding-bottom: 27px !important; }
  .lap-pl {
    padding-left: 27px !important; }
  .lap-ph {
    padding-right: 27px !important;
    padding-left: 27px !important; }
  .lap-pv {
    padding-top: 27px !important;
    padding-bottom: 27px !important; } }

@media screen and (min-width: 45em) {
  .lap-and-up-p {
    padding: 27px !important; }
  .lap-and-up-pt {
    padding-top: 27px !important; }
  .lap-and-up-pr {
    padding-right: 27px !important; }
  .lap-and-up-pb {
    padding-bottom: 27px !important; }
  .lap-and-up-pl {
    padding-left: 27px !important; }
  .lap-and-up-ph {
    padding-right: 27px !important;
    padding-left: 27px !important; }
  .lap-and-up-pv {
    padding-top: 27px !important;
    padding-bottom: 27px !important; } }

@media screen and (max-width: 63.9375em) {
  .portable-p {
    padding: 27px !important; }
  .portable-pt {
    padding-top: 27px !important; }
  .portable-pr {
    padding-right: 27px !important; }
  .portable-pb {
    padding-bottom: 27px !important; }
  .portable-pl {
    padding-left: 27px !important; }
  .portable-ph {
    padding-right: 27px !important;
    padding-left: 27px !important; }
  .portable-pv {
    padding-top: 27px !important;
    padding-bottom: 27px !important; } }

@media screen and (min-width: 64em) {
  .desk-p {
    padding: 27px !important; }
  .desk-pt {
    padding-top: 27px !important; }
  .desk-pr {
    padding-right: 27px !important; }
  .desk-pb {
    padding-bottom: 27px !important; }
  .desk-pl {
    padding-left: 27px !important; }
  .desk-ph {
    padding-right: 27px !important;
    padding-left: 27px !important; }
  .desk-pv {
    padding-top: 27px !important;
    padding-bottom: 27px !important; } }

/**
     * Add tiny paddings.
     */
@media screen and (max-width: 44.9375em) {
  .palm-p-- {
    padding: 7px !important; }
  .palm-pt-- {
    padding-top: 7px !important; }
  .palm-pr-- {
    padding-right: 7px !important; }
  .palm-pb-- {
    padding-bottom: 7px !important; }
  .palm-pl-- {
    padding-left: 7px !important; }
  .palm-ph-- {
    padding-right: 7px !important;
    padding-left: 7px !important; }
  .palm-pv-- {
    padding-top: 7px !important;
    padding-bottom: 7px !important; } }

@media screen and (max-width: 31.25em) {
  .flag-p-- {
    padding: 7px !important; }
  .flag-pt-- {
    padding-top: 7px !important; }
  .flag-pr-- {
    padding-right: 7px !important; }
  .flag-pb-- {
    padding-bottom: 7px !important; }
  .flag-pl-- {
    padding-left: 7px !important; }
  .flag-ph-- {
    padding-right: 7px !important;
    padding-left: 7px !important; }
  .flag-pv-- {
    padding-top: 7px !important;
    padding-bottom: 7px !important; } }

@media screen and (min-width: 45em) and (max-width: 63.9375em) {
  .lap-p-- {
    padding: 7px !important; }
  .lap-pt-- {
    padding-top: 7px !important; }
  .lap-pr-- {
    padding-right: 7px !important; }
  .lap-pb-- {
    padding-bottom: 7px !important; }
  .lap-pl-- {
    padding-left: 7px !important; }
  .lap-ph-- {
    padding-right: 7px !important;
    padding-left: 7px !important; }
  .lap-pv-- {
    padding-top: 7px !important;
    padding-bottom: 7px !important; } }

@media screen and (min-width: 45em) {
  .lap-and-up-p-- {
    padding: 7px !important; }
  .lap-and-up-pt-- {
    padding-top: 7px !important; }
  .lap-and-up-pr-- {
    padding-right: 7px !important; }
  .lap-and-up-pb-- {
    padding-bottom: 7px !important; }
  .lap-and-up-pl-- {
    padding-left: 7px !important; }
  .lap-and-up-ph-- {
    padding-right: 7px !important;
    padding-left: 7px !important; }
  .lap-and-up-pv-- {
    padding-top: 7px !important;
    padding-bottom: 7px !important; } }

@media screen and (max-width: 63.9375em) {
  .portable-p-- {
    padding: 7px !important; }
  .portable-pt-- {
    padding-top: 7px !important; }
  .portable-pr-- {
    padding-right: 7px !important; }
  .portable-pb-- {
    padding-bottom: 7px !important; }
  .portable-pl-- {
    padding-left: 7px !important; }
  .portable-ph-- {
    padding-right: 7px !important;
    padding-left: 7px !important; }
  .portable-pv-- {
    padding-top: 7px !important;
    padding-bottom: 7px !important; } }

@media screen and (min-width: 64em) {
  .desk-p-- {
    padding: 7px !important; }
  .desk-pt-- {
    padding-top: 7px !important; }
  .desk-pr-- {
    padding-right: 7px !important; }
  .desk-pb-- {
    padding-bottom: 7px !important; }
  .desk-pl-- {
    padding-left: 7px !important; }
  .desk-ph-- {
    padding-right: 7px !important;
    padding-left: 7px !important; }
  .desk-pv-- {
    padding-top: 7px !important;
    padding-bottom: 7px !important; } }

/**
     * Add small paddings.
     */
@media screen and (max-width: 44.9375em) {
  .palm-p- {
    padding: 14px !important; }
  .palm-pt- {
    padding-top: 14px !important; }
  .palm-pr- {
    padding-right: 14px !important; }
  .palm-pb- {
    padding-bottom: 14px !important; }
  .palm-pl- {
    padding-left: 14px !important; }
  .palm-ph- {
    padding-right: 14px !important;
    padding-left: 14px !important; }
  .palm-pv- {
    padding-top: 14px !important;
    padding-bottom: 14px !important; } }

@media screen and (max-width: 31.25em) {
  .flag-p- {
    padding: 14px !important; }
  .flag-pt- {
    padding-top: 14px !important; }
  .flag-pr- {
    padding-right: 14px !important; }
  .flag-pb- {
    padding-bottom: 14px !important; }
  .flag-pl- {
    padding-left: 14px !important; }
  .flag-ph- {
    padding-right: 14px !important;
    padding-left: 14px !important; }
  .flag-pv- {
    padding-top: 14px !important;
    padding-bottom: 14px !important; } }

@media screen and (min-width: 45em) and (max-width: 63.9375em) {
  .lap-p- {
    padding: 14px !important; }
  .lap-pt- {
    padding-top: 14px !important; }
  .lap-pr- {
    padding-right: 14px !important; }
  .lap-pb- {
    padding-bottom: 14px !important; }
  .lap-pl- {
    padding-left: 14px !important; }
  .lap-ph- {
    padding-right: 14px !important;
    padding-left: 14px !important; }
  .lap-pv- {
    padding-top: 14px !important;
    padding-bottom: 14px !important; } }

@media screen and (min-width: 45em) {
  .lap-and-up-p- {
    padding: 14px !important; }
  .lap-and-up-pt- {
    padding-top: 14px !important; }
  .lap-and-up-pr- {
    padding-right: 14px !important; }
  .lap-and-up-pb- {
    padding-bottom: 14px !important; }
  .lap-and-up-pl- {
    padding-left: 14px !important; }
  .lap-and-up-ph- {
    padding-right: 14px !important;
    padding-left: 14px !important; }
  .lap-and-up-pv- {
    padding-top: 14px !important;
    padding-bottom: 14px !important; } }

@media screen and (max-width: 63.9375em) {
  .portable-p- {
    padding: 14px !important; }
  .portable-pt- {
    padding-top: 14px !important; }
  .portable-pr- {
    padding-right: 14px !important; }
  .portable-pb- {
    padding-bottom: 14px !important; }
  .portable-pl- {
    padding-left: 14px !important; }
  .portable-ph- {
    padding-right: 14px !important;
    padding-left: 14px !important; }
  .portable-pv- {
    padding-top: 14px !important;
    padding-bottom: 14px !important; } }

@media screen and (min-width: 64em) {
  .desk-p- {
    padding: 14px !important; }
  .desk-pt- {
    padding-top: 14px !important; }
  .desk-pr- {
    padding-right: 14px !important; }
  .desk-pb- {
    padding-bottom: 14px !important; }
  .desk-pl- {
    padding-left: 14px !important; }
  .desk-ph- {
    padding-right: 14px !important;
    padding-left: 14px !important; }
  .desk-pv- {
    padding-top: 14px !important;
    padding-bottom: 14px !important; } }

/*------------------------------------*    #WIDTHS
\*------------------------------------*/
/**
 * A series of width helper classes that you can use to size things like grid
 * systems. Classes can take a fraction-like format (e.g. `.u-2/3`) or a spoken-
 * word format (e.g. `.u-2-of-3`). Use these in your markup:
 *
 * <div class="u-7/12">
 */
.u-1\/1 {
  width: 100% !important; }

.u-1\/2 {
  width: 50% !important; }

.u-1\/3 {
  width: 33.33333% !important; }

.u-2\/3 {
  width: 66.66667% !important; }

.u-1\/4 {
  width: 25% !important; }

.u-2\/4 {
  width: 50% !important; }

.u-3\/4 {
  width: 75% !important; }

.u-1\/5 {
  width: 20% !important; }

.u-2\/5 {
  width: 40% !important; }

.u-3\/5 {
  width: 60% !important; }

.u-4\/5 {
  width: 80% !important; }

/*------------------------------------*    #WIDTHS-RESPONSIVE
\*------------------------------------*/
/**
 * Responsive width classes based on your responsive settings.
 */
@media screen and (max-width: 44.9375em) {
  .u-1\/1-palm {
    width: 100% !important; }
  .u-1\/2-palm {
    width: 50% !important; }
  .u-1\/3-palm {
    width: 33.33333% !important; }
  .u-2\/3-palm {
    width: 66.66667% !important; }
  .u-1\/4-palm {
    width: 25% !important; }
  .u-2\/4-palm {
    width: 50% !important; }
  .u-3\/4-palm {
    width: 75% !important; }
  .u-1\/5-palm {
    width: 20% !important; }
  .u-2\/5-palm {
    width: 40% !important; }
  .u-3\/5-palm {
    width: 60% !important; }
  .u-4\/5-palm {
    width: 80% !important; } }

@media screen and (max-width: 31.25em) {
  .u-1\/1-flag {
    width: 100% !important; }
  .u-1\/2-flag {
    width: 50% !important; }
  .u-1\/3-flag {
    width: 33.33333% !important; }
  .u-2\/3-flag {
    width: 66.66667% !important; }
  .u-1\/4-flag {
    width: 25% !important; }
  .u-2\/4-flag {
    width: 50% !important; }
  .u-3\/4-flag {
    width: 75% !important; }
  .u-1\/5-flag {
    width: 20% !important; }
  .u-2\/5-flag {
    width: 40% !important; }
  .u-3\/5-flag {
    width: 60% !important; }
  .u-4\/5-flag {
    width: 80% !important; } }

@media screen and (min-width: 45em) and (max-width: 63.9375em) {
  .u-1\/1-lap {
    width: 100% !important; }
  .u-1\/2-lap {
    width: 50% !important; }
  .u-1\/3-lap {
    width: 33.33333% !important; }
  .u-2\/3-lap {
    width: 66.66667% !important; }
  .u-1\/4-lap {
    width: 25% !important; }
  .u-2\/4-lap {
    width: 50% !important; }
  .u-3\/4-lap {
    width: 75% !important; }
  .u-1\/5-lap {
    width: 20% !important; }
  .u-2\/5-lap {
    width: 40% !important; }
  .u-3\/5-lap {
    width: 60% !important; }
  .u-4\/5-lap {
    width: 80% !important; } }

@media screen and (min-width: 45em) {
  .u-1\/1-lap-and-up {
    width: 100% !important; }
  .u-1\/2-lap-and-up {
    width: 50% !important; }
  .u-1\/3-lap-and-up {
    width: 33.33333% !important; }
  .u-2\/3-lap-and-up {
    width: 66.66667% !important; }
  .u-1\/4-lap-and-up {
    width: 25% !important; }
  .u-2\/4-lap-and-up {
    width: 50% !important; }
  .u-3\/4-lap-and-up {
    width: 75% !important; }
  .u-1\/5-lap-and-up {
    width: 20% !important; }
  .u-2\/5-lap-and-up {
    width: 40% !important; }
  .u-3\/5-lap-and-up {
    width: 60% !important; }
  .u-4\/5-lap-and-up {
    width: 80% !important; } }

@media screen and (max-width: 63.9375em) {
  .u-1\/1-portable {
    width: 100% !important; }
  .u-1\/2-portable {
    width: 50% !important; }
  .u-1\/3-portable {
    width: 33.33333% !important; }
  .u-2\/3-portable {
    width: 66.66667% !important; }
  .u-1\/4-portable {
    width: 25% !important; }
  .u-2\/4-portable {
    width: 50% !important; }
  .u-3\/4-portable {
    width: 75% !important; }
  .u-1\/5-portable {
    width: 20% !important; }
  .u-2\/5-portable {
    width: 40% !important; }
  .u-3\/5-portable {
    width: 60% !important; }
  .u-4\/5-portable {
    width: 80% !important; } }

@media screen and (min-width: 64em) {
  .u-1\/1-desk {
    width: 100% !important; }
  .u-1\/2-desk {
    width: 50% !important; }
  .u-1\/3-desk {
    width: 33.33333% !important; }
  .u-2\/3-desk {
    width: 66.66667% !important; }
  .u-1\/4-desk {
    width: 25% !important; }
  .u-2\/4-desk {
    width: 50% !important; }
  .u-3\/4-desk {
    width: 75% !important; }
  .u-1\/5-desk {
    width: 20% !important; }
  .u-2\/5-desk {
    width: 40% !important; }
  .u-3\/5-desk {
    width: 60% !important; }
  .u-4\/5-desk {
    width: 80% !important; } }

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx) {
  .u-1\/1-retina {
    width: 100% !important; }
  .u-1\/2-retina {
    width: 50% !important; }
  .u-1\/3-retina {
    width: 33.33333% !important; }
  .u-2\/3-retina {
    width: 66.66667% !important; }
  .u-1\/4-retina {
    width: 25% !important; }
  .u-2\/4-retina {
    width: 50% !important; }
  .u-3\/4-retina {
    width: 75% !important; }
  .u-1\/5-retina {
    width: 20% !important; }
  .u-2\/5-retina {
    width: 40% !important; }
  .u-3\/5-retina {
    width: 60% !important; }
  .u-4\/5-retina {
    width: 80% !important; } }

/*------------------------------------*    #TYPOGRAPHY
\*------------------------------------*/
/**
 * Helper classes for manipulation type on a micro level.
 *
 */
.caps {
  text-transform: uppercase; }

.text--center {
  text-align: center; }

.text--left {
  text-align: left; }

.text--right {
  text-align: right; }

/*------------------------------------*    #FORMS
\*------------------------------------*/
/**
 * Override form styles.
 *
 */
.select2-container,
.select2-container--default {
  width: 100% !important; }
  @media screen and (min-width: 64em) {
    .select2-container,
    .select2-container--default {
      width: 49% !important; } }

.select2-container--default .select2-selection--single {
  background-color: #dddddd !important;
  border: none !important;
  border-radius: 0;
  height: 34px !important;
  font-size: 16px;
  font-size: 0.8rem;
  line-height: 1.6875; }

/*------------------------------------*    #GENERAL
\*------------------------------------*/
/**
 * Miscellaneous helpers.
 *
 */
.off {
  display: none !important; }
